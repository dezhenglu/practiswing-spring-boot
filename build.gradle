plugins {
    id 'org.springframework.boot' version '1.5.10.RELEASE'
}

repositories {
    jcenter()
}
subprojects {
    apply plugin: "org.springframework.boot"

    ext['thymeleaf.version'] = '3.0.9.RELEASE'
    ext['thymeleaf-layout-dialect.version'] = '2.2.2'
    ext['thymeleaf-extras-springsecurity4.version'] = '3.0.2.RELEASE'
    ext['thymeleaf-extras-java8time.version'] = '3.0.1.RELEASE'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    def defaultEncoding = 'UTF-8'
    tasks.withType(AbstractCompile).each { it.options.encoding = defaultEncoding }

    repositories {
        jcenter()
    }

    dependencies {
        compile "org.springframework.boot:spring-boot-devtools"
        testCompile "org.springframework.boot:spring-boot-starter-test"

        testCompile 'org.assertj:assertj-core:3.9.0'
    }
}

project(':alpha-web') {
    dependencies {
        compile "org.springframework.boot:spring-boot-starter-web"
        compile "org.springframework.boot:spring-boot-starter-thymeleaf"
        compile "org.springframework.boot:spring-boot-starter-security"
        compile "org.springframework.boot:spring-boot-starter-data-jpa"

        compile "org.thymeleaf.extras:thymeleaf-extras-springsecurity4"
        compile "org.thymeleaf.extras:thymeleaf-extras-java8time"
        compile "org.webjars:bootstrap:3.3.7"

        runtime "com.h2database:h2"
    }
}

project(':bravo-batch') {
    dependencies {
        compile "org.springframework.boot:spring-boot-starter-batch"
        runtime "com.h2database:h2"
    }
}

project(':charlie-web') {
    dependencies {
        compile "org.springframework.boot:spring-boot-starter-web"
        compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    }
}

project(':delta-integration') {
    dependencies {
        compile "org.springframework.boot:spring-boot-starter-integration"
        compile "org.springframework.integration:spring-integration-sftp"
        compile "org.springframework.integration:spring-integration-ftp"
    }
}

project(':india-integration') {
    dependencies {
        compile "org.springframework.boot:spring-boot-starter-integration"
        compile 'com.rabbitmq:amqp-client:4.1.1'
    }
}

project(':romeo-rabbitmq') {
    dependencies {
        compile 'org.springframework.boot:spring-boot-starter-amqp'
    }
}

project(':tango-test') {
    dependencies {
        testRuntime 'org.springframework.boot:spring-boot-starter-logging'
    }
}

project(':mike-mybatis') {
    dependencies {
        compile "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0"
        compile "org.mybatis:mybatis-typehandlers-jsr310:1.0.2"
        compile "com.h2database:h2"
    }
}

project(':whiskey-web') {
    dependencies {
        compile "org.springframework.boot:spring-boot-starter-web"
        compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    }
}